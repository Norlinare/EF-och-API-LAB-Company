// <auto-generated />
using Company.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Company.Data.Migrations
{
    [DbContext(typeof(CompanyContext))]
    [Migration("20230114232954_TechnicalTruthAb")]
    partial class TechnicalTruthAb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Company.Data.Entities.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("OrganisationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrganisationId");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DepartmentName = "Headquarter Sweden",
                            OrganisationId = 1
                        },
                        new
                        {
                            Id = 2,
                            DepartmentName = "Development Sweden",
                            OrganisationId = 2
                        },
                        new
                        {
                            Id = 3,
                            DepartmentName = "Research Finland",
                            OrganisationId = 4
                        },
                        new
                        {
                            Id = 4,
                            DepartmentName = "HR Service Sweden",
                            OrganisationId = 2
                        },
                        new
                        {
                            Id = 5,
                            DepartmentName = "Global Contact Sweden",
                            OrganisationId = 2
                        },
                        new
                        {
                            Id = 6,
                            DepartmentName = "Advertising Denmark",
                            OrganisationId = 5
                        },
                        new
                        {
                            Id = 7,
                            DepartmentName = "IT Support Norway",
                            OrganisationId = 3
                        });
                });

            modelBuilder.Entity("Company.Data.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("FamilyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("GivenName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("LabourUnionMember")
                        .HasColumnType("bit");

                    b.Property<int>("Salary")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DepartmentId = 1,
                            FamilyName = "Sanne",
                            GivenName = "Roland",
                            LabourUnionMember = false,
                            Salary = 452412
                        },
                        new
                        {
                            Id = 2,
                            DepartmentId = 1,
                            FamilyName = "Josefsson",
                            GivenName = "Maria",
                            LabourUnionMember = false,
                            Salary = 44412
                        },
                        new
                        {
                            Id = 3,
                            DepartmentId = 2,
                            FamilyName = "Aldien",
                            GivenName = "Lena",
                            LabourUnionMember = true,
                            Salary = 24412
                        },
                        new
                        {
                            Id = 4,
                            DepartmentId = 2,
                            FamilyName = "Norlen",
                            GivenName = "Bert",
                            LabourUnionMember = false,
                            Salary = 42412
                        },
                        new
                        {
                            Id = 5,
                            DepartmentId = 1,
                            FamilyName = "Liiv",
                            GivenName = "Moa",
                            LabourUnionMember = true,
                            Salary = 31412
                        },
                        new
                        {
                            Id = 6,
                            DepartmentId = 4,
                            FamilyName = "Pettersson",
                            GivenName = "Robert",
                            LabourUnionMember = true,
                            Salary = 21412
                        },
                        new
                        {
                            Id = 7,
                            DepartmentId = 3,
                            FamilyName = "Vikman",
                            GivenName = "Gustav",
                            LabourUnionMember = false,
                            Salary = 34112
                        },
                        new
                        {
                            Id = 8,
                            DepartmentId = 6,
                            FamilyName = "Svente",
                            GivenName = "Henrik",
                            LabourUnionMember = false,
                            Salary = 23412
                        });
                });

            modelBuilder.Entity("Company.Data.Entities.EmployeeRole", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId", "RoleId");

                    b.ToTable("EmployeeRoles");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            EmployeeId = 2,
                            RoleId = 2
                        },
                        new
                        {
                            EmployeeId = 2,
                            RoleId = 10
                        },
                        new
                        {
                            EmployeeId = 3,
                            RoleId = 4
                        },
                        new
                        {
                            EmployeeId = 3,
                            RoleId = 11
                        },
                        new
                        {
                            EmployeeId = 4,
                            RoleId = 3
                        },
                        new
                        {
                            EmployeeId = 5,
                            RoleId = 9
                        },
                        new
                        {
                            EmployeeId = 6,
                            RoleId = 5
                        },
                        new
                        {
                            EmployeeId = 7,
                            RoleId = 7
                        },
                        new
                        {
                            EmployeeId = 8,
                            RoleId = 12
                        });
                });

            modelBuilder.Entity("Company.Data.Entities.Organisation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("OrganisationName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("OrganisationNumber")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OrganisationName = "TechnicalTruth Global",
                            OrganisationNumber = 254054266
                        },
                        new
                        {
                            Id = 2,
                            OrganisationName = "TechnicalTruth Sweden",
                            OrganisationNumber = 254054296
                        },
                        new
                        {
                            Id = 3,
                            OrganisationName = "TechnicalTruth Norway",
                            OrganisationNumber = 224457224
                        },
                        new
                        {
                            Id = 4,
                            OrganisationName = "TechnicalTruth Finland",
                            OrganisationNumber = 124544396
                        },
                        new
                        {
                            Id = 5,
                            OrganisationName = "TechnicalTruth Denmark",
                            OrganisationNumber = 255023126
                        });
                });

            modelBuilder.Entity("Company.Data.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "CEO"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Assistant"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Lead Developer"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Developer"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Network Developer"
                        },
                        new
                        {
                            Id = 6,
                            Description = "HR"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Lead Researcher"
                        },
                        new
                        {
                            Id = 8,
                            Description = "IT Researcher"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Lead Communication"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Communication"
                        },
                        new
                        {
                            Id = 11,
                            Description = "Lead Marketing"
                        },
                        new
                        {
                            Id = 12,
                            Description = "Marketing"
                        },
                        new
                        {
                            Id = 13,
                            Description = "IT support"
                        });
                });

            modelBuilder.Entity("EmployeeRole", b =>
                {
                    b.Property<int>("EmployeesId")
                        .HasColumnType("int");

                    b.Property<int>("RolesId")
                        .HasColumnType("int");

                    b.HasKey("EmployeesId", "RolesId");

                    b.HasIndex("RolesId");

                    b.ToTable("EmployeeRole");
                });

            modelBuilder.Entity("Company.Data.Entities.Department", b =>
                {
                    b.HasOne("Company.Data.Entities.Organisation", "Organisation")
                        .WithMany()
                        .HasForeignKey("OrganisationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organisation");
                });

            modelBuilder.Entity("Company.Data.Entities.Employee", b =>
                {
                    b.HasOne("Company.Data.Entities.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("EmployeeRole", b =>
                {
                    b.HasOne("Company.Data.Entities.Employee", null)
                        .WithMany()
                        .HasForeignKey("EmployeesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Company.Data.Entities.Role", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
